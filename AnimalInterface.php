<!--Что такое интерфейс. Какая разница между абстрактным классом и интерфейсом? Создай файл AnimalInterface.php описывающий 2 метода getSpecies и getType. Подключи данный интерфейс к классу Animal. Можно ли наследоваться от нескольких интерфейсов?-->
<?php
/*ИНТЕРФЕЙС - это класс, в котором все методы являются абстрактными и открытыми. Интерфейс — это лишь список методов. В ИНТЕРФЕЙСЕ все методы являются абстрактными, абстрактный класс должен содержать, по крайней мере, один абстрактный метод. Иначе это будет стандартный класс PHP. В интерфейсе PHP все объявленные методы являются открытыми, а в абстрактном классе методы могут быть открытыми, частными или защищенными. КЛАСС МОЖЕТ РЕАЛИЗОВАТЬ НЕОГРАНИЧЕННОЕ КОЛИЧЕСТВО ИНТЕРФЕЙСОВ. В то же время класс PHP может породить только один абстрактный класс. Вы должны переопределять все методы интерфейса, а в абстрактном классе у вас есть выбор: переопределять методы или оставить их без изменений. Интерфейсы имеют более строгие правила, чем абстрактные классы. http://www.internet-technologies.ru/articles/article_2764.html https://coder-booster.ru/learning/php-beginners/class-interfaces https://myrusakov.ru/interfejsy-php.html */

//Объявим интерфейсы Int1 и Int2
interface Int1 {
    public function getSpecies($species);  //Определение метода интерфейса
}
interface Int2 {
	public function getType($type);
}

//Реализуем интерфейсы Int1 и Int2 в классе Animal
class Animal implements Int1, Int2 { //Для реализации интерфейса мы используем ключевое слово implements
	
    public function getSpecies($species) {
	echo "species: " . $species . "<br/>"; 
	}
    public function getType($type) {
	echo "type: " . $type . "<br/>";
	}
}
$objiect=new Animal;
$objiect->getSpecies(5); 
$objiect->getType(10);

/*ВАЖНО. Существование интерфейсов в PHP может показаться бессмысленным. Какой толк создавать их и прикреплять к классам, если их методы не реализуют никакого функционала? Ответ очень прост. Интерфейс гарантирует, что класс имеет реализацию метода. Если прикрепить к конкретному классу интерфейс, но забыть написать требуемые для него методы, программный код завершится фатальной ошибкой.*/

/*Интерфейс — это возможность задать жёсткую семантику.Абстрактный класс — это возможность вынести дублирующийся код и явно это отметить в иерархии.
Абстрактный класс — Figure (геометрическая фигура), от него могут быть образованы классы конкретных фигур — например, Rectangle, Circle и т.д.
Интерфейс — Drawable (то, что можно нарисовать). Он может быть реализован как во всех классах конкретных фигур (Circle, Rectangle), так и в других классах, не образованных от абстрактного Figure.*/
?>