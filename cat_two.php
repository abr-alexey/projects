<!--Что такое абстрактный класс? Можно ли создать объект абстрактного класса? Поменяй класс Animal на абстрактный? Нужен ли теперь конструктор в данном файле? Что такое абстрактный метод? Можно ли  наследоваться от нескольких классов?-->
<?php
/*Класс, который содержит по крайней мере один абстрактный метод, должен быть определен как абстрактный. Следует помнить, что НЕЛЬЗЯ СОЗДАВАТЬ ЭКЗЕМПЛЯР АБСТРАКТНОГО КЛАССА (ОБЪЕКТ КЛАССА). Методы (т.е. функции), объявленные абстрактными, несут, по существу, лишь описательный смысл и не могут включать реализации. При наследовании от абстрактного класса, все методы, помеченные абстрактными в родительском классе, должны быть определены в классе-потомке; кроме того, область видимости (public, protected или private) этих методов должна совпадать (или быть менее строгой). КОНСТРУКТОР В ДАННОМ ФАЙЛЕ НЕ НУЖЕН, т.к. его задача состоит в создании экземпляров класса.  http://php.net/manual/ru/language.oop5.abstract.php 
Работа с абстрактными классами в PHP. Абстрактный класс - это такой класс, который не может быть реализован, то есть, вы не сможете создать объект класса, если он абстрактный. Вместо этого вы создаете дочерние классы от него и спокойно создаете объекты от этих дочерних классов. Абстрактные классы представляют собой шаблоны для создания классов. Абстрактный класс содержит один или несколько абстрактных методов. Когда вы создаете абстрактный метод в абстрактном классе, вы не добавляете в этот метод ничего. Вместо этого он должен быть описан в любом дочернем классе. На заметку: как только вы создали хотя бы один абстрактный метод в классе, вы должны объявить этот класс как абстрактный. Когда от абстрактного класса наследуется обычный класс, он должен реализовать все абстрактные методы класса-родителя. В противном случае, PHP сгенерирует ошибку. Так, абстрактный класс создает “правила поведения” для своих дочерних классов. На заметку: вы можете добавлять в абстрактный класс и не абстрактные методы. Они будут обыкновенным образом наследоваться дочерними классами.  https://webhamster.ru/mytetrashare/index/mtb0/1365089922hn3swlweaz */
abstract class Animal{ //Создаём абстрактный класс
	var $species=null; 
	var $type=null;
	
	public function setSpeciesType($species, $type){ 
		$this->species=$species;
		$this->type=$type;
	}
	
	public function getSpecies(){ //Метод абстрактного класса
		echo "<pre>", $this->species, " \n</pre>"; //Или: return "$this->species"; 
	}
	abstract public function getType(); //Абстрактный метод в абстрактном классе
}

class Cat extends Animal{ //Наследуем абстрактный класс

	public function NewTopic() {
		echo $this->getSpecies();
	}
	public function getType(){ //Данный абстрактный метод getType() унаследованный от абтрактного класса Animal ОБЯЗАТЕЛЬНО нужно добавить описать
		echo "<pre>", $this->type, " \n</pre>"; //Или: return "$this->type";
	}
}

$one_object=new Cat();
$one_object->setSpeciesType("text_A", "text_B");
$one_object->NewTopic();
$one_object->getType();
?>