<!--В чем разница между while и do-while?
В файле loop.php вычисли сумму чисел от 1 до 100 с использованием циклов for, while и do-while
Объяви массив чисел от 1 до 10. С помощью цикла foreach пройди по массиву и вычисли произведение всех чисел.
Есть массив array(‘h’, ‘e’, ‘l’, ‘l’, ‘o’), получи из него по-лучить array(‘o’, ‘l’, ‘l’, ‘e’, ‘h’) с использованием цикла?-->
<?php
/*http://php.net/manual/ru/control-structures.for.php */
for($i=0; $i<=100; $i++){
	echo $i . " ";
} echo "<br/>";

/*Смысл выражения while очень прост. Оно указывает PHP выполнять вложенные выражения повторно до тех пор, пока выражение в самом while является TRUE. Значение выражения expr проверяется каждый раз перед началом цикла, поэтому даже если значение выражения изменится в процессе выполнения вложенных выражений в цикле, выполнение не прекратится до конца итерации (каждый раз, когда PHP выполняет выражения в цикле - это одна итерация). В том случае, если выражение while равно FALSE с самого начала, вложенные выражения ни разу не будут выполнены.*/
$a=0;
while($a<=100){ 
	echo $a . " ";
	$a=$a+1; //$a++;
} echo "<br/>";

/*Цикл do-while очень похож на цикл while, с тем отличием, что истинность выражения проверяется в конце итерации, а не в начале. Главное отличие от обычного цикла while в том, что первая итерация цикла do-while гарантированно выполнится (истинность выражения проверяется в конце итерации), тогда как она может не выполниться в обычном цикле while (истинность выражения которого проверяется в начале выполнения каждой итерации, и если изначально имеет значение FALSE, то выполнение цикла будет прервано сразу).*/
$b=0;
do{
	echo $b . " ";
	$b=$b+1;
} while ($b<=100); echo "<br/>";

/*Конструкция foreach предоставляет простой способ перебора массивов. Foreach работает только с массивами и объектами, и будет генерировать ошибку при попытке использования с переменными других типов или неинициализированными переменными.*/
$d=array(1,2,3,4,5,6,7,8,9,10);
var_export($d); echo "<br>"; 

$pr=1;

/*for ($i=0; $i<=9; $i++){
		$pr=$pr*$d[$i];
	}
echo $pr; echo "<br>";*/
	
foreach ($d as $key=>$value){
		$pr=$pr*$value;		
} 
echo $pr; echo "<br>";

//Цикл for и ассоциативные массивы
/*reset() – устанавливает указатель на первый элемент массива; next() – перемещает указатель на один элемент массива вперед; key() – возвращает ключ текущего элемента массива. 
Также вместо reset() можно использовать end(), тогда указатель будет установлен на последний элемент массива. Но в таком случае нужно и вместо next() использовать prev(), чтобы перемещать указатель не вперед, а назад. http://website-create.ru/web-zametki/sozdanie-saitov/86-perebor-ehlementov-massiva.html */
$k=array(0=>"h", 1=>"e", 2=>"l", 3=>"l", 4=>"j");
var_export($k); echo "<br>";

for (end($k); ($key = key($k)); prev($k)){
echo $key. '=&gt;' . $k[$key] . '<br>';	
}
?>